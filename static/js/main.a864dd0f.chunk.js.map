{"version":3,"sources":["components/ProfileCard.js","routes/Home.js","routes/ShortListed.js","routes/Rejected.js","components/InfoCard.js","App.js","index.js"],"names":["ProfileCard","props","info","Image","name","className","src","alt","Home","useState","filter","setFilter","profiles","setProfiles","loading","setLoading","useEffect","getProfiles","a","axios","get","data","profileData","profile","Object","keys","some","key","toString","toLowerCase","includes","type","color","height","width","to","placeholder","value","onChange","event","target","map","id","ShortList","JSON","parse","localStorage","getItem","console","log","Rejected","InfoCard","params","useParams","parseInt","setProfile","profileInfo","i","length","onClick","userId","setItem","stringify","found","find","push","shortList","reject","App","path","element","ShortListed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a864dd0f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ProfileCard = (props) => {\r\n    const { Image, name } = props.info\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={Image} alt=\"img\" />\r\n            <h3>{name}</h3>\r\n            <button className=\"profile-btn\">View Profile</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Loader from \"react-loader-spinner\";\r\nimport ProfileCard from '../components/ProfileCard'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [filter, setFilter] = useState('')\r\n    const [profiles, setProfiles] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getProfiles = async () => {\r\n            const info = await axios.get('https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json')\r\n            setProfiles(info.data)\r\n            setLoading(false)\r\n        }\r\n        getProfiles()\r\n    }, [])\r\n\r\n    const searchProfiles = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    let profileData = profiles.filter(profile => {\r\n        return Object.keys(profile).some(key =>\r\n            profile[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <div className=\"loader\">\r\n                    <Loader\r\n                        type=\"Bars\"\r\n                        color=\"#AA14F0\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                    <p>Loading ...</p>\r\n                </div> :\r\n                <div>\r\n                    <nav>\r\n                        <Link to=\"/\">\r\n                            <h1>Job Portal</h1>\r\n                        </Link>\r\n                        <div className=\"nav-btn-container\">\r\n                            <Link to=\"/shortlisted\">\r\n                                <button className=\"nav-btn btn1\">Short Listed</button>\r\n                            </Link>\r\n                            <Link to=\"/rejected\">\r\n                                <button className=\"nav-btn btn2\">Rejected</button>\r\n                            </Link>\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"search\">\r\n                        <input\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            value={filter}\r\n                            onChange={searchProfiles}\r\n                        />\r\n                    </div>\r\n                    <div className=\"card-container\">\r\n                        {profileData.map(profile => {\r\n                            return <Link to={profile.id}\r\n                                key={profile.id}>\r\n                                <ProfileCard info={profile} />\r\n                            </Link>\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport ProfileCard from '../components/ProfileCard'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ShortList = () => {\r\n    const [profiles, setProfiles] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getProfiles = () => {\r\n            let info = JSON.parse(localStorage.getItem('shortlisted'))\r\n            console.log(info)\r\n            setProfiles(info)\r\n            setLoading(false)\r\n        }\r\n\r\n        getProfiles()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <div className=\"loader\">\r\n                    <Loader\r\n                        type=\"Bars\"\r\n                        color=\"#000000\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                </div>\r\n                : <>\r\n                    <nav>\r\n                        <Link to=\"/\">\r\n                            <h1>Job Portal</h1>\r\n                        </Link>\r\n                        <h1>Short Listed</h1>\r\n                    </nav>\r\n                    {profiles === null ?\r\n                        <div className=\"empty\">List is empty</div> :\r\n                        <div className=\"card-container\">\r\n                            {profiles.map(profile => {\r\n                                return <Link to={'/' + profile.id}\r\n                                    key={profile.id}>\r\n                                    <ProfileCard info={profile} />\r\n                                </Link>\r\n                            })}\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShortList\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport ProfileCard from '../components/ProfileCard'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Rejected = () => {\r\n    const [profiles, setProfiles] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getProfiles = () => {\r\n            let info = JSON.parse(localStorage.getItem('rejected'))\r\n            console.log(info)\r\n            setProfiles(info)\r\n            setLoading(false)\r\n        }\r\n\r\n        getProfiles()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <div className=\"loader\">\r\n                    <Loader\r\n                        type=\"Bars\"\r\n                        color=\"#000000\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                </div>\r\n                : <>\r\n                    <nav>\r\n                        <Link to=\"/\">\r\n                            <h1>Job Portal</h1>\r\n                        </Link>\r\n                        <h1>Rejected</h1>\r\n                    </nav>\r\n                    {profiles === null ?\r\n                        <div className=\"empty\">List is empty</div> :\r\n                        <div className=\"card-container\">\r\n                            {profiles.map(profile => {\r\n                                return <Link to={'/' + profile.id}\r\n                                    key={profile.id}>\r\n                                    <ProfileCard info={profile} />\r\n                                </Link>\r\n                            })}\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Rejected\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst InfoCard = () => {\r\n    const params = useParams()\r\n    const id = parseInt(params.id)\r\n    const [profile, setProfile] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getProfiles = async () => {\r\n            const info = await axios.get('https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json')\r\n            const profiles = info.data\r\n\r\n            let profileInfo = ''\r\n            for (let i = 0; i < profiles.length; i++) {\r\n                let userId = parseInt(profiles[i].id)\r\n                if (userId === id) {\r\n                    profileInfo = profiles[i]\r\n                    break\r\n                }\r\n            }\r\n\r\n            setProfile(profileInfo)\r\n            setLoading(false)\r\n        }\r\n        getProfiles()\r\n    }, [id])\r\n\r\n    const shortList = (profile) => {\r\n        let userId = profile.id\r\n        const data = localStorage.getItem('shortlisted')\r\n        if (data === null) {\r\n            localStorage.setItem('shortlisted', JSON.stringify([]))\r\n        }\r\n\r\n        let profiles = JSON.parse(localStorage.getItem('shortlisted'))\r\n\r\n        let found = profiles.find(profile => profile.id === userId)\r\n\r\n        if (!found) {\r\n            profiles.push(profile)\r\n            localStorage.setItem('shortlisted', JSON.stringify(profiles))\r\n        }\r\n    }\r\n\r\n    const reject = (profile) => {\r\n        let userId = profile.id\r\n        const data = localStorage.getItem('rejected')\r\n        if (data === null) {\r\n            localStorage.setItem('rejected', JSON.stringify([]))\r\n        }\r\n\r\n        let profiles = JSON.parse(localStorage.getItem('rejected'))\r\n\r\n        let found = profiles.find(profile => profile.id === userId)\r\n\r\n        if (!found) {\r\n            profiles.push(profile)\r\n            localStorage.setItem('rejected', JSON.stringify(profiles))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <div className=\"loader\">\r\n                    <Loader\r\n                        type=\"Bars\"\r\n                        color=\"#000000\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                </div> :\r\n                <div>\r\n                    <nav>\r\n                        <Link to=\"/\">\r\n                            <h1>Job Portal</h1>\r\n                        </Link>\r\n                    </nav>\r\n                    <div className=\"profile-container\">\r\n                        <div className=\"profile-info\">\r\n                            <img src={profile.Image} alt=\"img\" />\r\n                            <div className=\"details\">\r\n                                <h3>Name : {profile.name}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"selection-btn\">\r\n                            <Link to=\"/\">\r\n                                <button className=\"profile-btn\" >&#8656; Back</button>\r\n                            </Link>\r\n                            <Link to=\"/\">\r\n                                <button\r\n                                    onClick={() => shortList(profile)}\r\n                                    className=\"nav-btn btn1\">\r\n                                    Short List\r\n                                </button>\r\n                            </Link>\r\n                            <Link to=\"/\">\r\n                                <button\r\n                                    onClick={() => reject(profile)}\r\n                                    className=\"nav-btn btn2\">\r\n                                    Reject\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","import React from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Home from './routes/Home'\nimport ShortListed from './routes/ShortListed'\nimport Rejected from './routes/Rejected'\nimport InfoCard from './components/InfoCard'\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path='shortlisted' element={<ShortListed />} />\n        <Route path='rejected' element={<Rejected />} />\n        <Route path=':id' element={<InfoCard />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}